version: '3.8'

services:
  sda-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fluid-sbi-dev
    volumes:
      - .:/workspace
      - ./data:/workspace/data
      - ./results:/workspace/results
    environment:
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - WANDB_PROJECT=${WANDB_PROJECT:-fluid-sbi-experiments}
      - WANDB_ENTITY=${WANDB_ENTITY:-}
      - PYTHONPATH=/workspace:/workspace/sda
      # venv を明示（Dockerfile で /opt/venv を作ってる前提）
      - VIRTUAL_ENV=/opt/venv
      - PATH=/opt/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      # GPU を使うなら下の `gpus: all` を有効化（Docker 20.10+）
      # 旧来の deploy:resources は Swarm 専用なので使いません
    # gpus: all
    working_dir: /workspace
    stdin_open: true
    tty: true

  # 必要なときだけ分離起動できる Jupyter サービス（profile 指定）
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fluid-sbi-jupyter
    profiles: [jupyter]
    volumes:
      - .:/workspace
      - ./data:/workspace/data
      - ./results:/workspace/results
    environment:
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - WANDB_PROJECT=${WANDB_PROJECT:-fluid-sbi-experiments}
      - PYTHONPATH=/workspace:/workspace/sda
      - VIRTUAL_ENV=/opt/venv
      - PATH=/opt/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    working_dir: /workspace
    # ポート競合を避けたい場合は ports を外して VS Code の forwardPorts を使用
    # 直接公開したい場合だけ有効化（例: 8889->8888）
    # ports:
    #   - "8889:8888"
    command: >-
      bash -lc '
        uv run jupyter lab
          --ip=0.0.0.0 --port=8888 --no-browser --allow-root
          --ServerApp.root_dir=/workspace
          --ServerApp.token="" --ServerApp.password=""
      '
    stdin_open: true
    tty: true

volumes: {}
